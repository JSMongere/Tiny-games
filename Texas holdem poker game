import random

# Define card class
class Card:
    def __init__(self, suit, value):
        self.suit = suit
        self.value = value

    def __str__(self):
        return f"{self.value}-{self.suit}"

# Define deck class
class Deck:
    def __init__(self):
        self.cards = []
        for suit in ['hearts', 'diamonds', 'clubs', 'spades']:
            for value in range(1, 14):
                self.cards.append(Card(suit, value))

    def shuffle(self):
        random.shuffle(self.cards)

    def draw_card(self):
        return self.cards.pop()

# Define player class
class Player:
    def __init__(self, name):
        self.name = name
        self.hand = []

    def add_card(self, card):
        self.hand.append(card)

    def discard_hand(self):
        self.hand = []

# Define game class
class Game:
    def __init__(self, players, deck):
        self.players = players
        self.deck = deck
        self.community_cards = []

    def deal_cards(self):
        for player in self.players:
            player.discard_hand()
            player.add_card(self.deck.draw_card())
            player.add_card(self.deck.draw_card())

    def deal_flop(self):
        self.community_cards.append(self.deck.draw_card())
        self.community_cards.append(self.deck.draw_card())
        self.community_cards.append(self.deck.draw_card())

    def deal_turn(self):
        self.community_cards.append(self.deck.draw_card())

    def deal_river(self):
        self.community_cards.append(self.deck.draw_card())

    def show_cards(self):
        for player in self.players:
            print(f"{player.name}'s hand: {player.hand}")
        print(f"Community cards: {self.community_cards}")

# Create deck and players
deck = Deck()
deck.shuffle()
players = [Player('Player 1'), Player('Player 2'), Player('Player 3')]

# Deal initial cards
game = Game(players, deck)
game.deal_cards()

# Deal flop
game.deal_flop()

# Deal turn
game.deal_turn()

# Deal river
game.deal_river()

# Show all cards
game.show_cards()

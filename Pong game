import turtle as t
playerAscore=0
playerBscore=0

#create a window and declare a variable called window and call the screen()
window=t.Screen()
window.title("The Pong Game")
window.bgcolor("green")
window.setup(width=800,height=600)
window.tracer(0)

#Creating the left paddle
leftpaddle=t.Turtle()
leftpaddle.speed(0)
leftpaddle.shape("square")
leftpaddle.color("white")
leftpaddle.shapesize(stretch_wid=6, stretch_len=1)
leftpaddle.penup()
leftpaddle.goto(-350, 0)

#Creating the right paddle
rightpaddle=t.Turtle()
rightpaddle.speed(0)
rightpaddle.shape("square")
rightpaddle.color("white")
rightpaddle.shapesize(stretch_wid=6, stretch_len=1)
rightpaddle.penup()
rightpaddle.goto(350, 0)

#Creating the ball
ball=t.Turtle()
ball.speed(1)
ball.shape("square")
ball.color("white")
ball.penup()
ball.goto(0, 0)
ball.dx = 2
ball.dy = -2

#Creating the score
score=t.Turtle()
score.speed(0)
score.shape("square")
score.color("white")
score.penup()
score.hideturtle()
score.goto(0, 260)

#Function to move the left paddle up
def leftpaddle_up():
    y=leftpaddle.ycor()
    y+=20
    leftpaddle.sety(y)

#Function to move the left paddle down
def leftpaddle_down():
    y=leftpaddle.ycor()
    y-=20
    leftpaddle.sety(y)

#Function to move the right paddle up
def rightpaddle_up():
    y=rightpaddle.ycor()
    y+=20
    rightpaddle.sety(y)

#Function to move the right paddle down
def rightpaddle_down():
    y=rightpaddle.ycor()
    y-=20
    rightpaddle.sety(y)

#Keyboard bindings
window.listen()
window.onkeypress(leftpaddle_up, "w")
window.onkeypress(leftpaddle_down, "s")
window.onkeypress(rightpaddle_up, "Up")
window.onkeypress(rightpaddle_down, "Down")

#Main game loop
while True:
    window.update()

    #Moving the ball
    ball.setx(ball.xcor() + ball.dx)
    ball.sety(ball.ycor() + ball.dy)

    #Border collision
    if ball.ycor() > 290:
        ball.sety(290)
        ball.dy *= -1

    if ball.ycor() < -290:
        ball.sety(-290)
        ball.dy *= -1

    if ball.xcor() > 390:
        ball.goto(0, 0)
        ball.dx *= -1
        playerBscore += 1
        score.clear()
        score.write("Player A: {}  Player B: {}".format(playerAscore, playerBscore), align="center", font=("Courier", 24, "normal"))

    if ball.xcor() < -390:
        ball.goto(0, 0)
        ball.dx *= -1
        playerAscore += 1
        score.clear()
        score.write("Player A: {}  Player B: {}".format(playerAscore, playerBscore), align="center", font=("Courier", 24, "normal"))

    #Paddle collision
    if (ball.dx > 0) and (350> ball.xcor() > 340) and (rightpaddle.ycor() + 50 > ball.ycor() > rightpaddle.ycor() - 50):
        ball.color("blue")
        ball.dx *= -1

    elif (ball.dx < 0) and (-350 < ball.xcor() < -340) and (leftpaddle.ycor() + 50 > ball.ycor() > leftpaddle.ycor() - 50):
        ball.color("red")
        ball.dx *= -1

    #Missed ball paddle
    if ball.xcor() > 390:
        ball.goto(0, 0)
        ball.dy *= -1
        ball.dx *= -1

    if ball.xcor() < -390:
        ball.goto(0, 0)
        ball.dy *= -1
        ball.dx *= -1

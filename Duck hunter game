import pygame
import random
import time

# Initialize Pygame
pygame.init()

# Define constants
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
BACKGROUND_COLOR = (0, 0, 0)
DUCK_SPEED = 2
FONT_SIZE = 32
FPS = 60

# Load assets
duck_images = [pygame.image.load(f'assets/ducks/{i}.png') for i in range(1, 4)]

# Initialize variables
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
clock = pygame.time.Clock()
font = pygame.font.Font(None, FONT_SIZE)
ducks = []
score = 0

def spawn_duck():
    duck_image = random.choice(duck_images)
    duck_rect = duck_image.get_rect(center=(random.randint(0, SCREEN_WIDTH), 0))
    ducks.append((duck_image, duck_rect, DUCK_SPEED))

def update_ducks():
    for duck in ducks:
        duck[1].y += duck[2]
        if duck[1].top > SCREEN_HEIGHT:
            ducks.remove(duck)

def draw_ducks():
    for duck in ducks:
        screen.blit(duck[0], duck[1])

def check_collision(ducks, mouse_pos):
    for duck in ducks:
        if duck[1].collidepoint(mouse_pos):
            ducks.remove(duck)
            global score
            score += 1

def main():
    global ducks
    spawn_duck()
    running = True
    while running:
        clock.tick(FPS)
        screen.fill(BACKGROUND_COLOR)
        draw_ducks()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.MOUSEBUTTONDOWN:
                mouse_pos = pygame.mouse.get_pos()
                check_collision(ducks, mouse_pos)
        update_ducks()
        pygame.display.flip()
    pygame.quit()

if __name__ == '__main__':
    main()

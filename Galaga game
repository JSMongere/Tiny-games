import pygame
import sys
import math
from pygame.locals import *

# Vector class for 2D vectors
class vector:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __add__(self, other):
        return vector(self.x + other.x, self.y + other.y)

    def __sub__(self, other):
        return vector(self.x - other.x, self.y - other.y)

    def __mul__(self, scalar):
        return vector(self.x * scalar, self.y * scalar)

    def __truediv__(self, scalar):
        return vector(self.x / scalar, self.y / scalar)

    def __abs__(self):
        return math.sqrt(self.x ** 2 + self.y ** 2)

    def __str__(self):
        return f"({self.x}, {self.y})"

# Constants
WIDTH, HEIGHT = 800, 600
FPS = 60

# Colors
WHITE = (255, 255, 255)
BLUE = (0, 0, 255)

# Player's ship
ship = vector(WIDTH / 2, HEIGHT - 50)
ship_vel = vector(0, 0)
ship_speed = 5

# Bullet
bullet_vel = vector(0, -10)
bullet_speed = 10
bullet_state = "ready"

# Game's mode (settings.py). It selects the game's difficulty. EASY_MODE = 0 MEDIUM_MODE = 1 HARD_MODE = 2
GAME_MODE = EASY_MODE

# Game's window
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Galaga")
clock = pygame.time.Clock()

# Game loop
running = True
while running:
    # Event handling
    for event in pygame.event.get():
        if event.type == QUIT:
            running = False
        elif event.type == KEYDOWN:
            if event.key == K_RIGHT:
                ship_vel.x = ship_speed
            elif event.key == K_LEFT:
                ship_vel.x = -ship_speed
            elif event.key == K_SPACE:
                if bullet_state == "ready":
                    bullet_pos = ship
                    bullet_state = "fire"
        elif event.type == KEYUP:
            if event.key == K_RIGHT or event.key == K_LEFT:
                ship_vel.x = 0

    # Game logic
    ship = ship + ship_vel
    if ship.x < 0:
        ship.x = 0
    elif ship.x > WIDTH:
        ship.x = WIDTH

    if bullet_state == "fire":
        bullet_pos = bullet_pos + bullet_vel
        if bullet_pos.y < 0:
            bullet_state = "ready"
            bullet_pos = ship

    # Drawing
    screen.fill(WHITE)
    pygame.draw.rect(screen, BLUE, (ship.x, ship.y, 50, 50))
    if bullet_state == "fire":
        pygame.draw.rect(screen, BLUE, (bullet_pos.x, bullet_pos.y, 5, 10))

    # Update display
    pygame.display.flip()
    clock.tick(FPS)

# Quit Pygame
pygame.quit()
